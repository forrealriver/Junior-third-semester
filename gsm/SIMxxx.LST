C51 COMPILER V9.01   SIMXXX                                                                07/30/2017 17:26:48 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SIMXXX
OBJECT MODULE PLACED IN SIMxxx.OBJ
COMPILER INVOKED BY: E:\Keil_v5\51\C51\BIN\C51.EXE SIMxxx.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "SIMxxx.h"
   2          
   3          u8 SIM900_CSQ[4];
   4          u8* sim900a_check_cmd(u8 *str)
   5          {
   6   1              char *strx=0;
   7   1              if(USART1_RX_STA&0X8000)                //
   8   1              { 
   9   2                      USART1_RX_BUF[USART1_RX_STA&0X7FFF]=0;//
  10   2                      strx=strstr((const char*)USART1_RX_BUF,(const char*)str);
  11   2              } 
  12   1              return (u8*)strx;
  13   1      }
  14          u8 sim900a_send_cmd(u8 *cmd,u8 *ack,u16 waittime)
  15          {       
  16   1              u8 res=0;
  17   1              USART1_RX_STA=0;USART1_RX_REC_ATCOMMAD=1;
  18   1              UART1_SendString(cmd);
  19   1              if(ack&&waittime)               
  20   1              {
  21   2                      while(--waittime)       
  22   2                      {
  23   3                              delay_ms(10);
  24   3                              if(USART1_RX_STA&0X8000)
  25   3                              {
  26   4                                      if(sim900a_check_cmd(ack))break; 
  27   4                                      USART1_RX_STA=0;
  28   4                              } 
  29   3                      }
  30   2                      if(waittime==0)res=1; 
  31   2              }
  32   1              USART1_RX_STA=0;USART1_RX_REC_ATCOMMAD=0;
  33   1              return res;
  34   1      }
  35          u8 sim900a_work_test(void)
  36          {
  37   1              if(sim900a_send_cmd((u8 *)"AT\r\n",(u8 *)"OK",100))
  38   1              {
  39   2                      if(sim900a_send_cmd((u8 *)"AT\r\n",(u8 *)"OK",100))return SIM_COMMUNTION_ERR;   //通信不上
  40   2              }               
  41   1              if(sim900a_send_cmd((u8 *)"AT+CPIN?\r\n",(u8 *)"READY",400))return SIM_CPIN_ERR;        //没有SIM卡
  42   1              if(sim900a_send_cmd((u8 *)"AT+CREG?\r\n",(u8 *)"0,1",400))
  43   1              {
  44   2                      if(strstr((const char*)USART1_RX_BUF,"0,5")==NULL)
  45   2                      {
  46   3                               if(!sim900a_send_cmd((u8 *)"AT+CSQ\r\n",(u8 *)"OK",200))       
  47   3                               {
  48   4                                      memcpy(SIM900_CSQ,USART1_RX_BUF+15,2);
  49   4                               }
  50   3                               return SIM_CREG_FAIL;  //等待附着到网络
  51   3                      }
  52   2              }
  53   1              return SIM_OK;
  54   1      }
  55          u8 sim900a_enmessage_mode_out(void)     //让GSM板收到的英文或数字短信不转码
C51 COMPILER V9.01   SIMXXX                                                                07/30/2017 17:26:48 PAGE 2   

  56          {       
  57   1              if(sim900a_send_cmd((u8 *)"AT+CMGF=1\r\n",(u8 *)"OK",100))      return SIM_CMGF_ERR;
  58   1              if(sim900a_send_cmd((u8 *)"AT+CSCS=\"GSM\"\r\n",(u8 *)"OK",100))        return SIM_CSCS_ERR;
  59   1              if(sim900a_send_cmd((u8 *)"AT+CSCA?\r\n",(u8 *)"OK",100))       return SIM_CSCA_ERR;
  60   1              if(sim900a_send_cmd((u8 *)"AT+CSMP=17,167,0,241\r\n",(u8 *)"OK",100))   return SIM_CSMP_ERR;
  61   1              if(sim900a_send_cmd((u8 *)"AT+CNMI=2,2\r\n",(u8 *)"OK",200))return SIM_CNMI_ERR;        //短信直接输出
  62   1              return SIM_OK;
  63   1      }
  64          u8 SIM_HANDLE_MESSAGE_CMD(void)
  65          {
  66   1              if(strstr(USART1_RX_BUF,"006F006E")!=NULL)
  67   1              {
  68   2                      return 1;
  69   2              }
  70   1              else if(strstr(USART1_RX_BUF,"006F00660066")!=NULL)     return 2;
  71   1              return 0;
  72   1      }
  73          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    516    ----
   CONSTANT SIZE    =    151    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
